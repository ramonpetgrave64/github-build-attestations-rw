# Building and attesting are performed in two separated Jobs to elevate to SLSA3.
# This workflow requires a `./slsa_build.sh` at the repository root to run your build.

# This workflow invokes your Build Action at `.github/actions/slsa-build`'s `action.yml`
# Example `.github/actions/slsa-build/action.yml`

# name: SLSA3 Build
# description: >-
#   A named Action that you have at in your source repo .github/actions/slsa-build/action.yml.
#   The Workflow `attest-build-provenance-sls3-rw` will search invoke this action to run
#   your build. You man have any steps or invoke yet another Action. 
#   You can also include inputs with default values, though the calling workflow will not use the custom inputs.
# inputs:
#   myInput:
#     description: "A custom input"
#     required: false
#     default: "default value"
# runs:
#   using: composite
#   steps:
#     - name: build
#       shell: bash
#       run: make release

# Example workflow invocation:

# jobs:
#   build-and-attest:
#     permissions:
#       id-token: write
#       attestations: write
#       contents: read
#     uses: ramonpetgrave64/github-build-attestations-rw/.github/workflows/attest-build-provenance-slsa3-rw.yml@main
#     with:
#       build-runner-label: ubuntu-latest
#       subject-path: |
#         ./gundam
#         ./myhero

name: Attest Build Provenance SLSA3 Resuable Workflow

permissions: {}

on:
  workflow_call:
    inputs:
      build-artifact-name:
        description: >
          The name of GitHub workflow artifact to store the subject files
        default: slsa3_build_artifact
        required: false
        type: string
      build-attestation-name:
        description: >
          The name of GitHub workflow artifact to store the attestation bundle file
        default: slsa3_build_attestation
        required: false
        type: string
      subject-path:
        description: >
          Path to the artifact serving as the subject of the attestation. May contain a
          glob pattern or list of paths (total subject count cannot exceed 2500).
          See https://github.com/actions/upload-artifact?tab=readme-ov-file#examples.
        required: true
        type: string
      show-summary:
        description: >
          Whether to attach a list of generated attestations to the workflow run
          summary page. Defaults to true.
        default: true
        required: false
        type: boolean
      build-github-token:
        description: >
          The GitHub token used as environment variable GH_TOKEN to ./slsa_build.sh.
        default: ''
        required: false
        type: string
      build-runner-label:
        description: >
          The runner label to pass to `runs-on:`. e.g., "ubuntu-latest". 
        required: true
        type: string
      test-verify-signer-workflow-cert-identity:
        description: >
          The signer workflow's --cert-identity to use in the `verify` Job, to make sure the
          artifacts and attestations can be verified with the GitHub CLI.
        required: false
        default: https://github.com/ramonpetgrave64/github-build-attestations-rw/.github/workflows/attest-build-provenance-slsa3-rw.yml@refs/heads/main
        type: string
      self-hosted-runner-check-high-perms:
        description: >
          Whether to use the alternate method of checking for self-hosted runners on the Build Job. This requires the permission to
          sign an attestation with another child reusable workflow with an alternate certificate identity `stub-workflow-do-not-trust.yml`.
        required: false
        default: false
        type: boolean
      stub-workflow-cert-identity:
        description: >
          The Build sub-reusable workflow's --cert-identity to use in the `attest` Job, to make sure the
          Build Job was using a github-hosted runner.
        required: false
        default: https://github.com/ramonpetgrave64/github-build-attestations-rw/.github/workflows/stub-workflow-do-not-trust.yml@refs/heads/main
        type: string    
    outputs:
      build-artifact-id:
        description: >
          The artifact-id of the build artifacts. See the `download-artifact` Step for how to use.
        value: ${{ inputs.self-hosted-runner-check-high-perms && jobs.build-high-perms.outputs.build-artifact-id || jobs.build-low-perms.outputs.build-artifact-id }}
      attestation-artifact-id:
        description: >
          The artifact-id of the build attestations. See the `download-artifact` Step for how to use.
        value: ${{ jobs.sign.outputs.attestation-artifact-id }}

jobs:
  build-low-perms:
    if: ${{ !inputs.self-hosted-runner-check-high-perms }}
    outputs:
      job-id: ${{ github.job }}
      build-artifact-id: ${{ steps.upload-artifact.outputs.artifact-id }}
    permissions:
      contents: read
    runs-on: ${{ inputs.build-runner-label }}
    steps:
      - name: detect-runner
        if: ${{ runner.environment != 'github-hosted' }}
        run: echo "self-hosted runner detected, failing job!" && exit 1
      - name: checkout-source-repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          ref: ${{ github.sha }}
          persist-credentials: false
      - name: slsa-build
        if: ${{ runner.environment == 'github-hosted' }}
        uses: ./.github/actions/slsa-build
        env:
          GITHUB_TOKEN: ${{ inputs.build-github-token }}
      - name: upload-artifact
        id: upload-artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 #v4.6.0
        with:
          name: ${{ inputs.build-artifact-name }}
          path: ${{ inputs.subject-path }}
          if-no-files-found: error

  build-high-perms:
    if: ${{ inputs.self-hosted-runner-check-high-perms }}
    permissions:
      contents: read
      id-token: write
      attestations: write
    uses: ./.github/workflows/stub-workflow-do-not-trust.yml
    with: 
      build-runner-label: ${{ inputs.build-runner-label }}
      build-artifact-name: ${{ inputs.build-artifact-name }}
      subject-path: ${{ inputs.subject-path }}
      show-summary: ${{ inputs.show-summary }}
      build-github-token: ${{ inputs.build-github-token }}

  sign:
    outputs:
      attestation-artifact-id: ${{ steps.upload-attestation.outputs.artifact-id }}
      build-artifact-id: ${{ inputs.self-hosted-runner-check-high-perms && needs.build-high-perms.outputs.build-artifact-id || needs.build-low-perms.outputs.build-artifact-id }}
    needs: [build-low-perms, build-high-perms]
    if: ${{ always() }}
    permissions:
      id-token: write
      attestations: write
    runs-on: ubuntu-latest
    env:
      ARTIFACTS_FOLDER: ./artifacts
      ATTESTATIONS_FOLDER: ./attestations
    steps:
      - name: detect-runner
        if: ${{ runner.environment != 'github-hosted' }}
        run: echo "self-hosted runner detected, failing job!" && exit 1
      # actions/download-artifact@v4 does not yet support downloading via the immutable artifact-id,
      # but the Javascript library does. See: https://github.com/actions/download-artifact/issues/349
      - run: npm install @actions/artifact@2.1.9
      - name: download-stub
        if: ${{ inputs.self-hosted-runner-check-high-perms }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          ARTIFACT_ID: ${{ needs.build-high-perms.outputs.stub-artifact-id }}
        with:
          script: |
            const {default: artifactClient} = require('@actions/artifact')
            const { ARTIFACT_ID } = process.env
            await artifactClient.downloadArtifact(ARTIFACT_ID, { path: 'artifacts/'})
      - name: download-stub-attestation
        if: ${{ inputs.self-hosted-runner-check-high-perms }}
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          ARTIFACT_ID: ${{ needs.build-high-perms.outputs.stub-attestation-id }}
        with:
          script: |
            const {default: artifactClient} = require('@actions/artifact')
            const { ARTIFACT_ID, ATTESTATIONS_FOLDER } = process.env
            await artifactClient.downloadArtifact(ARTIFACT_ID, { path: ATTESTATIONS_FOLDER })
      - name: verify-stub
        if: ${{ inputs.self-hosted-runner-check-high-perms }}
        env:
          SIGNER_WORKFLOW_CERT_IDENTITY: ${{ inputs.stub-workflow-cert-identity }}
          SOURCE_REPO: ${{ github.repository }}
          SOURCE_REF: ${{ github.ref }}
        run: |
          STUB=$( find "$ARTIFACTS_FOLDER" -type f  | head -n 1 )
          ATT=$( find "$ATTESTATIONS_FOLDER" -type f  | head -n 1 )
          gh attestation verify \
              $STUB \
              --bundle $ATT \
              --deny-self-hosted-runners \
              --repo "$SOURCE_REPO" \
              --cert-identity "$SIGNER_WORKFLOW_CERT_IDENTITY" \
              --format json --jq '.[].verificationResult.signature.certificate.sourceRepositoryRef' \
            | grep "^$SOURCE_REF$" \
          && rm -rf "$ARTIFACTS_FOLDER" "$ATTESTATIONS_FOLDER"
      - name: download-build-artifact
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          ARTIFACT_ID: ${{ inputs.self-hosted-runner-check-high-perms && needs.build-high-perms.outputs.build-artifact-id || needs.build-low-perms.outputs.build-artifact-id }}
        with:
          script: |
            const {default: artifactClient} = require('@actions/artifact')
            const { ARTIFACT_ID, ARTIFACTS_FOLDER } = process.env
            await artifactClient.downloadArtifact(ARTIFACT_ID, { path: ARTIFACTS_FOLDER })
      - name: attest-build-provenance
        if: ${{ runner.environment == 'github-hosted' }}
        id: attest-build-provenance
        uses: actions/attest-build-provenance@db473fddc028af60658334401dc6fa3ffd8669fd # v2.3.0
        with:
          subject-path: ${{ env.ARTIFACTS_FOLDER }}/*
          show-summary: ${{ inputs.show-summary }}
      - name: upload-attestation
        id: upload-attestation
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 #v4.6.0
        with:
          name: ${{ inputs.build-attestation-name }}
          path: ${{ steps.attest-build-provenance.outputs.bundle-path }}
          if-no-files-found: error

  test-verify:
    needs: sign
    if: ${{ always() }}
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
      ARTIFACTS_FOLDER: ./artifacts
      ATTESTATIONS_FOLDER: ./attestations
      BUILD_ARTIFACT_ID: ${{ needs.sign.outputs.build-artifact-id }}
      ATTESTATION_ARTIFACT_ID: ${{ needs.sign.outputs.attestation-artifact-id }}
      SOURCE_REPO: ${{ github.repository }}
      SOURCE_REF: ${{ github.ref }}
      SIGNER_WORKFLOW_CERT_IDENTITY: ${{ inputs.test-verify-signer-workflow-cert-identity }}
    steps:
      - name: detect-runner
        if: ${{ runner.environment != 'github-hosted' }}
        run: echo "self-hosted runner detected, failing job!" && exit 1
      - run: npm install @actions/artifact@2.1.9
      - name: download-artifact
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const {default: artifactClient} = require('@actions/artifact')
            const { BUILD_ARTIFACT_ID, ARTIFACTS_FOLDER } = process.env
            await artifactClient.downloadArtifact(BUILD_ARTIFACT_ID, { path: ARTIFACTS_FOLDER})
      - name: download-attestation
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const {default: artifactClient} = require('@actions/artifact')
            const { ATTESTATION_ARTIFACT_ID, ATTESTATIONS_FOLDER } = process.env
            await artifactClient.downloadArtifact(ATTESTATION_ARTIFACT_ID, { path: ATTESTATIONS_FOLDER})
      - name: online-verify-with-cert-identity
        run: |
          for FILE in "$ARTIFACTS_FOLDER"/*; do
            gh attestation verify \
              $FILE \
              --deny-self-hosted-runners \
              --repo "$SOURCE_REPO" \
              --cert-identity "$SIGNER_WORKFLOW_CERT_IDENTITY" \
              --format json --jq '.[].verificationResult.signature.certificate.sourceRepositoryRef' \
            | grep "^$SOURCE_REF$"
          done
      - name: offline-verify-with-cert-identity
        run: |
          ATT=$( find "$ATTESTATIONS_FOLDER" -type f  | head -n 1 )
          for FILE in "$ARTIFACTS_FOLDER"/*; do
            gh attestation verify \
              $FILE \
              --deny-self-hosted-runners \
              --repo "$SOURCE_REPO" \
              --cert-identity "$SIGNER_WORKFLOW_CERT_IDENTITY" \
              --format json --jq '.[].verificationResult.signature.certificate.sourceRepositoryRef' \
            | grep "^$SOURCE_REF$"
          done
